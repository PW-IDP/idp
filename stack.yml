version: "3.8"
services:
  frontend:
    image: hypersmoit/idp_frontend
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - idp_network
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 2
      update_config:
        parallelism: 2
        order: start-first
      rollback_config:
        parallelism: 2
        order: stop-first

  backend:
    image: hypersmoit/idp_backend
    logging:
            driver: loki
            options:
                loki-url: http://127.0.0.1:3100/loki/api/v1/push
                loki-external-labels: job=pw-idp-backend,owner=mara,environment=development
    ports:
      - "8080:8080"
    depends_on:
      - db
    networks:
      - idp_network
    environment:
        SPRING_DATASOURCE_URL: jdbc:mysql://db:3306/proiect?createDatabaseIfNotExist=true
        SPRING_DATASOURCE_USERNAME: root
        SPRING_DATASOURCE_PASSWORD: admin
    deploy:
      replicas: 2
      placement:
        max_replicas_per_node: 2
      update_config:
        parallelism: 2
        order: start-first
      rollback_config:
        parallelism: 2
        order: stop-first

  db:
    image: mysql
    environment:
      MYSQL_ROOT_PASSWORD: admin
      MYSQL_DATABASE: proiect
      MYSQL_USER: admin
    ports:
      - "3306:3306"
    networks:
      - idp_network
    deploy:
      placement:
        constraints:
          - "node.role==manager"
    volumes:
      - db-volume:/var/lib/mysql

  kong:
    image: kong:latest
    volumes:
      - /home/hypersmoit/Desktop/idp_pweb/idp/Kong:/usr/local/kong/declarative
    environment:
      KONG_DATABASE: 'off'
      KONG_DECLARATIVE_CONFIG: /usr/local/kong/declarative/kong.yml
      KONG_PROXY_ACCESS_LOG: /dev/stdout
      KONG_ADMIN_ACCESS_LOG: /dev/stdout
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_ADMIN_LISTEN: 0.0.0.0:8001, 0.0.0.0:8444 ssl
    ports:
      - 8000:8000
      - 8443:8443
      - 8001:8001
      - 8444:8444
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - idp_network

  grafana:
    image: grafana/grafana:latest
    volumes:
      - grafana-volume:/var/lib/grafana
    ports:
      - 3001:3000
    depends_on:
      - prometheus
      - loki
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - idp_network

  prometheus:
    image: prom/prometheus
    volumes:
      - /home/hypersmoit/Desktop/idp_pweb/idp/prometheus/config.yml:/etc/prometheus/prometheus.yml
    ports:
      - 9090:9090
    deploy:
      placement:
        constraints: [node.role == manager]
    networks:
      - idp_network

  node_exporter:
        image: prom/node-exporter
        deploy:
            mode: global
        volumes:
            - /proc:/host/proc:ro
            - /sys:/host/sys:ro
            - /:/rootfs:ro
        command:
            - '--path.procfs=/host/proc'
            - '--path.rootfs=/rootfs'
            - '--path.sysfs=/host/sys'
            - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)'
        ports:
            - 9100:9100
        networks:
            - idp_network

  cadvisor:
        image: gcr.io/cadvisor/cadvisor
        deploy:
            mode: global
        volumes:
            - /:/rootfs:ro
            - /var/run:/var/run:ro
            - /sys:/sys:ro
            - /var/lib/docker/:/var/lib/docker:ro
            - /dev/disk:/dev/disk/:ro
        ports:
            - 8081:8080
        networks:
            - idp_network

  loki:
        image: grafana/loki
        volumes:
            - /home/hypersmoit/Desktop/idp_pweb/idp/configs/loki/loki.yml:/etc/config/loki.yml
            - /home/hypersmoit/Desktop/idp_pweb/idp/configs/loki/wal:/wal
        entrypoint:
            - /usr/bin/loki
            - -config.file=/etc/config/loki.yml
        ports:
            - 3100:3100
        networks:
            - idp_network

volumes:
  grafana-volume:
  db-volume:

networks:
  idp_network:
